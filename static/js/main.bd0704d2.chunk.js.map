{"version":3,"sources":["Ship.js","Board.js","SetupPrompt.js","GameOverPrompt.js","App.js","reportWebVitals.js","index.js"],"names":["Ship","type","size","position","this","hits","setPosition","bind","hit","arr","Board","props","patrol","frigate","submarine","cruiser","carrier","receiveAttack","coord","includes","cols","className","boardType","id","map","row","rowIndex","col","colIndex","data","onClick","handleCellClick","React","Component","SetupPrompt","setupState","handleSubmitClick","GameOverPrompt","winner","handleGameOverClick","App","state","tempSetupArr","playerCoords","computerCoords","computerGuesses","NPCpatrol","NPCfrigate","NPCsubmarine","NPCcruiser","NPCcarrier","handleStartMenuClick","handleSetupClick","handleSetupSubmission","handlePlayerClick","document","querySelector","classList","toggle","setState","index","cell","canPlace","add","push","length","alert","renderPlayerBoard","randomizeComputerBoard","forEach","querySelectorAll","style","getRandomIndex","Math","floor","random","toLocaleString","minimumIntegerDigits","useGrouping","renderComputerBoard","forceUpdate","intIndex","parseInt","charAt","sort","a","b","abs","switchCase","checkShip","checkWin","computerMove","user","shipType","isSunk","gameOver","cellType","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd0704d2.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nclass Ship {\r\n    constructor(type, size, position){\r\n        this.type = type;\r\n        this.size = size;\r\n        this.position = position;\r\n        this.hits = 0;\r\n        \r\n        this.setPosition = this.setPosition.bind(this);\r\n        this.hit = this.hit.bind(this);\r\n    }\r\n    setPosition(arr) {\r\n        this.position = arr;\r\n    }\r\n    hit() {\r\n        var hits = this.hits;\r\n        hits++;\r\n        this.hits = hits;\r\n    }\r\n    isSunk() {\r\n        if(this.hits == this.size) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ship;","import React from 'react';\r\n\r\nimport Ship from './Ship';\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.patrol = new Ship('patrol', 2, []);\r\n        this.frigate = new Ship('frigate', 3, []);\r\n        this.submarine = new Ship('submarine', 3, []);\r\n        this.cruiser = new Ship('cruiser', 4, []);\r\n        this.carrier = new Ship('carrier', 5, []);\r\n\r\n        this.receiveAttack = this.receiveAttack.bind(this);\r\n        this.setPosition = this.setPosition.bind(this);\r\n    }\r\n\r\n    receiveAttack(type, coord) {\r\n        switch(type) {\r\n            case 'patrol':\r\n                if(this.patrol.position.includes(coord)) {\r\n                    this.patrol.hit();\r\n                    return ('attack received');\r\n                }\r\n                break;\r\n            default:\r\n                return //\r\n            \r\n        }\r\n    }\r\n\r\n    setPosition(type, coord) {\r\n        switch(type) {\r\n            case 'patrol':\r\n                this.patrol.position = coord;\r\n                break;\r\n            default:\r\n                return //\r\n        }\r\n        return this.patrol.position[0];\r\n    }\r\n\r\n\r\n    render() {\r\n        const cols = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n        const rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\r\n\r\n        return(\r\n            <>\r\n                <div \r\n                className={`gameboard-container ${this.props.boardType}-gameboard-container`}\r\n                id={this.props.boardType+'-container'}>\r\n                    { rows.map((row, rowIndex) => \r\n                        <div key={ rowIndex } className=\"gameboard-row\">\r\n                            { cols.map((col, colIndex) => \r\n                            <div \r\n                            key={ colIndex }\r\n                            id={ this.props.boardType + '-' + rowIndex + colIndex }\r\n                            className={ `gameboard-cell ${this.props.boardType}-cell` }\r\n                            data={rowIndex + \"\" + colIndex}\r\n                            onClick={ () => { this.props.handleCellClick((rowIndex + \"\" + colIndex)) } }>\r\n                                { row + \"-\" + col }\r\n                            </div>)}\r\n                        </div>) }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Board;","import React from 'react';\r\n\r\nclass SetupPrompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <div\r\n            id=\"setup-prompt-window\"\r\n            className='setup-prompt-window'>\r\n                <h1>place your {this.props.setupState}</h1>\r\n                <button\r\n                onClick={() => {this.props.handleSubmitClick()}}>submit your board</button>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default SetupPrompt;","import React from 'react';\r\n\r\nclass GameOverPrompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <div \r\n                id='game-over-container'\r\n                className='game-over-container'\r\n                >\r\n                    <h1>{this.props.winner} won!</h1>\r\n                    <button\r\n                    id='game-over-button'\r\n                    onClick={()=>{this.props.handleGameOverClick()}}>restart</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default GameOverPrompt;","import React from 'react';\r\nimport Board from './Board';\r\nimport Ship from './Ship';\r\nimport SetupPrompt from './SetupPrompt';\r\nimport GameOverPrompt from './GameOverPrompt';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      setupState: null,\r\n      winner: null\r\n    }\r\n    // temp and reference coordinate arrays\r\n    this.tempSetupArr = [];\r\n    this.playerCoords = [];\r\n    this.computerCoords = [];\r\n\r\n    this.computerGuesses = [];\r\n\r\n    this.patrol = new Ship('patrol', 2, []);\r\n    this.frigate = new Ship('frigate', 3, []);\r\n    this.submarine = new Ship('submarine', 3, []);\r\n    this.cruiser = new Ship('cruiser', 4, []);\r\n    this.carrier = new Ship('carrier', 5, []);\r\n\r\n    this.NPCpatrol = new Ship('patrol', 2, []);\r\n    this.NPCfrigate = new Ship('frigate', 3, []);\r\n    this.NPCsubmarine = new Ship('submarine', 3, []);\r\n    this.NPCcruiser = new Ship('cruiser', 4, []);\r\n    this.NPCcarrier = new Ship('carrier', 5, []);\r\n\r\n    this.handleStartMenuClick = this.handleStartMenuClick.bind(this);\r\n    this.handleSetupClick = this.handleSetupClick.bind(this);\r\n    this.handleSetupSubmission = this.handleSetupSubmission.bind(this);\r\n    this.handlePlayerClick = this.handlePlayerClick.bind(this);\r\n    this.handleGameOverClick = this.handleGameOverClick.bind(this);\r\n  }\r\n\r\n  handleStartMenuClick() {\r\n    // remove start menu elements\r\n    const menu = document.querySelector('.start-menu-container');\r\n    menu.classList.toggle('hide');\r\n\r\n    // render setup elements\r\n    const setup = document.querySelector('#setup-container');\r\n    setup.classList.toggle('show');\r\n    const setupPromptWindow = document.querySelector('.setup-prompt-window');\r\n    setupPromptWindow.classList.toggle('show');\r\n\r\n    this.setState({ setupState: 'patrol' });\r\n  }\r\n\r\n  handleSetupClick(index) {\r\n    const cell = document.querySelector(`#setup-${index}`);\r\n    \r\n    if(this.canPlace(index)) {      \r\n      cell.classList.add('player-occupied');\r\n      this.playerCoords.push(index);\r\n\r\n      const switchCase = this.state.setupState;\r\n      switch(switchCase) {\r\n        case 'patrol':\r\n          cell.classList.add('player-patrol');\r\n          this.tempSetupArr.push(index);\r\n          this.patrol.position.push(index);\r\n\r\n          if(this.patrol.position.length === this.patrol.size) {\r\n            this.tempSetupArr = [];\r\n            this.setState({ setupState: 'frigate' });\r\n          }\r\n          break;\r\n        case 'frigate':\r\n          cell.classList.add('player-frigate');\r\n          this.tempSetupArr.push(index);\r\n          this.frigate.position.push(index);\r\n\r\n          if(this.frigate.position.length === this.frigate.size) {\r\n            this.tempSetupArr = [];\r\n            this.setState({ setupState: 'submarine' });\r\n          }\r\n          break;\r\n        case 'submarine':\r\n          cell.classList.add('player-submarine');\r\n          this.tempSetupArr.push(index);\r\n          this.submarine.position.push(index);\r\n\r\n          if(this.submarine.position.length === this.submarine.size) {\r\n            this.tempSetupArr = [];\r\n            this.setState({ setupState: 'cruiser' });\r\n          }\r\n          break;\r\n        case 'cruiser':\r\n          cell.classList.add('player-cruiser');\r\n          this.tempSetupArr.push(index);\r\n          this.cruiser.position.push(index);\r\n\r\n          if(this.cruiser.position.length === this.cruiser.size) {\r\n            this.tempSetupArr = [];\r\n            this.setState({ setupState: 'carrier' });\r\n          }\r\n          break;\r\n        case 'carrier':\r\n          cell.classList.add('player-carrier');\r\n          this.tempSetupArr.push(index);\r\n          this.carrier.position.push(index);\r\n\r\n          if(this.carrier.position.length === this.carrier.size) {\r\n            this.tempSetupArr = [];\r\n            alert('setup complete');\r\n          }\r\n          break;\r\n        default: \r\n          alert('something went wrong');\r\n      }\r\n\r\n    } else {\r\n      alert('reassess placement please');\r\n    }\r\n\r\n  }\r\n\r\n  handleSetupSubmission() {\r\n    // remove all setup elements\r\n    const setupBoard = document.querySelector('#setup-container');\r\n    setupBoard.classList.toggle('show');\r\n    const setupWindow = document.querySelector('#setup-prompt-window');\r\n    setupWindow.classList.toggle('show');\r\n\r\n    // render the player board\r\n    this.renderPlayerBoard();\r\n    // randomize the computer board\r\n    // computer board is rendered within the randomize function\r\n    this.randomizeComputerBoard();\r\n  }\r\n  renderPlayerBoard() {\r\n    // coloring position of player ships\r\n    this.patrol.position.forEach(position => {\r\n      const cell = document.querySelector(`#player-${position}`);\r\n      cell.classList.add('player-patrol');\r\n    });\r\n    this.frigate.position.forEach(position => {\r\n      const cell = document.querySelector(`#player-${position}`);\r\n      cell.classList.add('player-frigate');\r\n    });\r\n    this.submarine.position.forEach(position => {\r\n      const cell = document.querySelector(`#player-${position}`);\r\n      cell.classList.add('player-submarine');\r\n    });\r\n    this.cruiser.position.forEach(position => {\r\n      const cell = document.querySelector(`#player-${position}`);\r\n      cell.classList.add('player-cruiser');\r\n    });\r\n    this.carrier.position.forEach(position => {\r\n      const cell = document.querySelector(`#player-${position}`);\r\n      cell.classList.add('player-carrier');\r\n    });\r\n\r\n    // disable click on player board\r\n    const cells = document.querySelectorAll('.player-cell');\r\n    cells.forEach(cell => {\r\n      cell.style = 'pointer-events: none;';\r\n    })\r\n    // render the player board\r\n    const board = document.querySelector('#player-container');\r\n    board.classList.toggle('show');\r\n  }\r\n  randomizeComputerBoard() {\r\n    // get a random coordinate 0-99\r\n    function getRandomIndex() {\r\n      var rand = Math.floor(Math.random() * 99);\r\n      // formatted to 00 format\r\n      return (rand).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false});\r\n    }\r\n    // automating cell placement per computer ship component\r\n    while(this.NPCpatrol.position.length < this.NPCpatrol.size) {\r\n      var index = getRandomIndex();\r\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\r\n        this.NPCpatrol.position.push(index);\r\n        this.tempSetupArr.push(index);\r\n        this.computerCoords.push(index);\r\n      } \r\n    }\r\n    this.tempSetupArr = [];\r\n    while(this.NPCfrigate.position.length < this.NPCfrigate.size) {\r\n      var index = getRandomIndex();\r\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\r\n        this.NPCfrigate.position.push(index);\r\n        this.tempSetupArr.push(index);\r\n        this.computerCoords.push(index);\r\n      } \r\n    }\r\n    this.tempSetupArr = [];\r\n    while(this.NPCsubmarine.position.length < this.NPCsubmarine.size) {\r\n      var index = getRandomIndex();\r\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\r\n        this.NPCsubmarine.position.push(index);\r\n        this.tempSetupArr.push(index);\r\n        this.computerCoords.push(index);\r\n      } \r\n    }\r\n    this.tempSetupArr = [];\r\n    while(this.NPCcruiser.position.length < this.NPCcruiser.size) {\r\n      var index = getRandomIndex();\r\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\r\n        this.NPCcruiser.position.push(index);\r\n        this.tempSetupArr.push(index);\r\n        this.computerCoords.push(index);\r\n      } \r\n    }\r\n    this.tempSetupArr = [];\r\n    while(this.NPCcarrier.position.length < this.NPCcarrier.size) {\r\n      var index = getRandomIndex();\r\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\r\n        this.NPCcarrier.position.push(index);\r\n        this.tempSetupArr.push(index);\r\n        this.computerCoords.push(index);\r\n      } \r\n    }\r\n    this.tempSetupArr = [];\r\n\r\n    // unequal position length and size indicates improper placement\r\n    // call the function again while condition remains unmet\r\n    if(this.NPCpatrol.position.length !== this.NPCpatrol.size &&\r\n      this.NPCfrigate.position.length !== this.NPCfrigate.size &&\r\n      this.NPCsubmarine.position.length !== this.NPCsubmarine.size &&\r\n      this.NPCcruiser.position.length !== this.NPCcruiser.size &&\r\n      this.NPCcarrier.position.length !== this.NPCcarrier.size ) {\r\n        this.randomizeComputerBoard();\r\n    }\r\n\r\n    this.renderComputerBoard();\r\n\r\n  }\r\n  renderComputerBoard() {\r\n    // setting classes for each cell per computer ship component\r\n    this.NPCpatrol.position.forEach( coord => {\r\n      const cell = document.querySelector(`#computer-${coord}`);\r\n      cell.classList.add('computer-occupied');\r\n      cell.classList.add('computer-patrol');\r\n    });\r\n    this.NPCfrigate.position.forEach( coord => {\r\n      const cell = document.querySelector(`#computer-${coord}`);\r\n      cell.classList.add('computer-occupied');\r\n      cell.classList.add('computer-frigate');\r\n    });\r\n    this.NPCsubmarine.position.forEach( coord => {\r\n      const cell = document.querySelector(`#computer-${coord}`);\r\n      cell.classList.add('computer-occupied');\r\n      cell.classList.add('computer-submarine');\r\n    });\r\n    this.NPCcruiser.position.forEach( coord => {\r\n      const cell = document.querySelector(`#computer-${coord}`);\r\n      cell.classList.add('computer-occupied');\r\n      cell.classList.add('computer-cruiser');\r\n    });\r\n    this.NPCcarrier.position.forEach( coord => {\r\n      const cell = document.querySelector(`#computer-${coord}`);\r\n      cell.classList.add('computer-occupied');\r\n      cell.classList.add('computer-carrier');\r\n    });\r\n\r\n    const board = document.querySelector('#computer-container');\r\n    board.classList.toggle('show');\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  canPlace(index) {\r\n    // used for numerical comparisons\r\n    const intIndex = parseInt(index);\r\n\r\n    // first cell\r\n    if(this.tempSetupArr.length === 0) {\r\n      return true;\r\n    // second cell\r\n    } else if (this.tempSetupArr.length === 1) {\r\n      // check wraparounds\r\n      if((this.tempSetupArr[0].charAt(1) == 9 && index.charAt(1) == 0) ||\r\n         (this.tempSetupArr[0].charAt(1) == 0 && index.charAt(1) == 9 )) {\r\n        return false;\r\n      }\r\n\r\n      // immediate above and below\r\n      if(this.tempSetupArr[0] == intIndex + 10 ||\r\n         this.tempSetupArr[0] == intIndex - 10 ) {\r\n           return true;\r\n         }\r\n\r\n      // immediate left and right\r\n      if(this.tempSetupArr[0] == intIndex + 1 ||\r\n         this.tempSetupArr[0] == intIndex - 1 ) {\r\n           return true;\r\n         }\r\n    // third+ cell\r\n    } else {\r\n      // sort tempArr to for organized traversal\r\n      this.tempSetupArr.sort(function(a,b){return a-b;});\r\n\r\n      // horizontal ship\r\n      if(Math.abs(this.tempSetupArr[0] - this.tempSetupArr[1]) === 1 ) {\r\n        if( \r\n          // check left and right of the beginning and end of array\r\n          (this.tempSetupArr[0] == intIndex + 1 ||\r\n          this.tempSetupArr[0] == intIndex - 1 ||\r\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex + 1 ||\r\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex - 1) &&\r\n          // check wraparound placement\r\n          (this.tempSetupArr[0].charAt(0) == index.charAt(0)) \r\n          ){\r\n            return true;\r\n          }\r\n      // vertical ship\r\n      } else {\r\n        // check above and below of the beginnign and end of array\r\n        if(this.tempSetupArr[0] == intIndex + 10 ||\r\n          this.tempSetupArr[0] == intIndex - 10 ||\r\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex + 10 ||\r\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex - 10 ) {\r\n            return true;\r\n          }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  handlePlayerClick(index) {\r\n    const cell = document.querySelector(`#computer-${index}`);\r\n    const switchCase = cell.classList[3];\r\n\r\n    switch(switchCase) {\r\n      case 'computer-patrol':\r\n        this.NPCpatrol.hit();\r\n        cell.classList.toggle('hit');\r\n        break;\r\n      case 'computer-frigate':\r\n        this.NPCfrigate.hit();\r\n        cell.classList.toggle('hit');\r\n        break;\r\n      case 'computer-submarine':\r\n        this.NPCsubmarine.hit();\r\n        cell.classList.toggle('hit');\r\n        break;\r\n      case 'computer-cruiser':\r\n        this.NPCcruiser.hit();\r\n        cell.classList.toggle('hit');\r\n        break;\r\n      case 'computer-carrier':\r\n        this.NPCcarrier.hit();\r\n        cell.classList.toggle('hit');\r\n        break;\r\n      default:\r\n        cell.classList.toggle('miss');\r\n        break;\r\n    }\r\n    // check the isSunk condition of the cell\r\n    this.checkShip('player', switchCase);\r\n    // check the win condition after every click\r\n    this.checkWin('player');\r\n    // follow up win condition check with computer move\r\n    this.computerMove(); \r\n  }\r\n\r\n  checkShip(user, shipType) {\r\n    // check if player sunk the computer's ship\r\n    if(user === 'player') {\r\n      switch(shipType) {\r\n        case 'computer-patrol':\r\n          if(this.NPCpatrol.isSunk()) {\r\n            alert('sunk computer patrol boat');\r\n          }\r\n          break;\r\n        case 'computer-frigate':\r\n          if(this.NPCfrigate.isSunk()) {\r\n            alert('sunk computer frigate boat');\r\n          }\r\n          break;\r\n        case 'computer-submarine':\r\n          if(this.NPCsubmarine.isSunk()) {\r\n            alert('sunk computer submarine boat');\r\n          }\r\n          break;\r\n        case 'computer-cruiser':\r\n          if(this.NPCcruiser.isSunk()) {\r\n            alert('sunk computer cruiser boat');\r\n          }\r\n          break;\r\n        case 'computer-carrier':\r\n          if(this.NPCcarrier.isSunk()) {\r\n            alert('sunk computer carrier boat');\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    // check if computer sunk the player's ship\r\n    } else {\r\n      switch(shipType) {\r\n        case 'player-patrol':\r\n          if(this.patrol.isSunk()) {\r\n            alert('sunk player patrol boat');\r\n          }\r\n          break;\r\n        case 'player-frigate':\r\n          if(this.frigate.isSunk()) {\r\n            alert('sunk player frigate boat');\r\n          }\r\n          break;\r\n        case 'player-submarine':\r\n          if(this.submarine.isSunk()) {\r\n            alert('sunk player submarine boat');\r\n          }\r\n          break;\r\n        case 'player-cruiser':\r\n          if(this.cruiser.isSunk()) {\r\n            alert('sunk player cruiser boat');\r\n          }\r\n          break;\r\n        case 'player-carrier':\r\n          if(this.carrier.isSunk()) {\r\n            alert('sunk player carrier boat');\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkWin(user) {\r\n    if(user === 'player') {\r\n      if\r\n        (this.NPCpatrol.isSunk() &&\r\n        this.NPCfrigate.isSunk() &&\r\n        this.NPCsubmarine.isSunk() &&\r\n        this.NPCcruiser.isSunk() &&\r\n        this.NPCcarrier.isSunk() ){\r\n          this.setState({ winner: 'you' });\r\n          this.gameOver('player');\r\n      } else {\r\n        return;\r\n      }\r\n    } else if (user === 'computer') {\r\n      if\r\n        (this.patrol.isSunk() &&\r\n        this.frigate.isSunk() &&\r\n        this.submarine.isSunk() &&\r\n        this.cruiser.isSunk() &&\r\n        this.carrier.isSunk() ){\r\n          this.setState({ winner: 'computer' });\r\n          this.gameOver('computer');\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  gameOver(user) {\r\n    const gameOverPrompt = document.querySelector('#game-over-container');\r\n    gameOverPrompt.classList.toggle('show');\r\n  }\r\n\r\n  computerMove() {\r\n    var index = Math.floor(Math.random() * 99).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false});\r\n    const cell = document.querySelector(`#player-${index}`);\r\n    const cellType = cell.classList[2];\r\n\r\n    if(!this.computerGuesses.includes(index)) {\r\n      if(this.playerCoords.includes(index)) {\r\n        switch(cellType) {\r\n          case 'player-patrol':\r\n            this.patrol.hit();\r\n            break;\r\n          case 'player-frigate':\r\n            this.frigate.hit();\r\n            break;\r\n          case 'player-submarine':\r\n            this.submarine.hit();\r\n            break;\r\n          case 'player-cruiser':\r\n            this.cruiser.hit();\r\n            break;\r\n          case 'player-carrier':\r\n            this.carrier.hit();\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        cell.classList.toggle('hit');\r\n      } else {\r\n        cell.classList.toggle('miss');\r\n      }\r\n      this.computerGuesses.push(index);\r\n\r\n    } else {\r\n      this.computerMove();\r\n    }\r\n    // check the isSunk condition of the cell\r\n    this.checkShip('computer', cellType);\r\n    // check the win condition after every move\r\n    this.checkWin('computer');\r\n  }\r\n\r\n  handleGameOverClick() {\r\n    window.location.reload(true);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <>\r\n      <div className='start-menu-container'>\r\n        <h1>Welcome to Frag-A-Frigate</h1>\r\n        <button onClick={ this.handleStartMenuClick }>click to begin</button>\r\n      </div>\r\n      <Board \r\n      boardType='setup'\r\n      handleCellClick={ this.handleSetupClick }/>\r\n      <SetupPrompt \r\n      setupState={this.state.setupState}\r\n      handleSubmitClick={this.handleSetupSubmission}\r\n      />\r\n\r\n      <Board \r\n      boardType='player'/>\r\n\r\n      <Board \r\n      boardType='computer'\r\n      handleCellClick= { this.handlePlayerClick }/>\r\n\r\n      <GameOverPrompt \r\n      winner={this.state.winner}\r\n      handleGameOverClick={this.handleGameOverClick}\r\n      />\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}