{"version":3,"sources":["Ship.js","Board.js","SetupPrompt.js","App.js","reportWebVitals.js","index.js"],"names":["Ship","type","size","position","this","hits","setPosition","bind","hit","arr","Board","props","patrol","frigate","submarine","cruiser","carrier","receiveAttack","coord","includes","cols","className","boardType","id","map","row","rowIndex","col","colIndex","data","onClick","handleCellClick","React","Component","SetupPrompt","setupState","handleSubmitClick","App","state","tempSetupArr","playerCoords","computerCoords","NPCpatrol","NPCfrigate","NPCsubmarine","NPCcruiser","NPCcarrier","handleStartMenuClick","handleSetupClick","handleSetupSubmission","document","querySelector","classList","toggle","setState","index","cell","canPlace","add","push","length","alert","renderPlayerBoard","randomizeComputerBoard","forEach","querySelectorAll","style","getRandomIndex","Math","floor","random","toLocaleString","minimumIntegerDigits","useGrouping","renderComputerBoard","intIndex","parseInt","charAt","sort","a","b","abs","handlePlayerClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c493b498.chunk.js","sourcesContent":["// import React from 'react';\r\n\r\nclass Ship {\r\n    constructor(type, size, position){\r\n        this.type = type;\r\n        this.size = size;\r\n        this.position = position;\r\n        this.hits = 0;\r\n        \r\n        this.setPosition = this.setPosition.bind(this);\r\n        this.hit = this.hit.bind(this);\r\n    }\r\n    setPosition(arr) {\r\n        this.position = arr;\r\n    }\r\n    hit() {\r\n        var hits = this.hits;\r\n        hits++;\r\n        this.hits = hits;\r\n        // return this.state.hits;\r\n    }\r\n    isSunk() {\r\n        if(this.hits == this.size) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Ship;","import React from 'react';\r\n\r\nimport Ship from './Ship';\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.patrol = new Ship('patrol', 2, []);\r\n        this.frigate = new Ship('frigate', 3, []);\r\n        this.submarine = new Ship('submarine', 3, []);\r\n        this.cruiser = new Ship('cruiser', 4, []);\r\n        this.carrier = new Ship('carrier', 5, []);\r\n\r\n        this.receiveAttack = this.receiveAttack.bind(this);\r\n        this.setPosition = this.setPosition.bind(this);\r\n    }\r\n\r\n    receiveAttack(type, coord) {\r\n        switch(type) {\r\n            case 'patrol':\r\n                if(this.patrol.position.includes(coord)) {\r\n                    this.patrol.hit();\r\n                    return ('attack received');\r\n                }\r\n                break;\r\n            default:\r\n                return //\r\n            \r\n        }\r\n    }\r\n\r\n    setPosition(type, coord) {\r\n        switch(type) {\r\n            case 'patrol':\r\n                this.patrol.position = coord;\r\n                break;\r\n            default:\r\n                return //\r\n        }\r\n        return this.patrol.position[0];\r\n    }\r\n\r\n\r\n    render() {\r\n        const cols = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n        const rows = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'];\r\n\r\n        return(\r\n            <>\r\n                <div \r\n                className={`gameboard-container ${this.props.boardType}-gameboard-container`}\r\n                id={this.props.boardType+'-container'}>\r\n                    { rows.map((row, rowIndex) => \r\n                        <div key={ rowIndex } className=\"gameboard-row\">\r\n                            { cols.map((col, colIndex) => \r\n                            <div \r\n                            key={ colIndex }\r\n                            id={ this.props.boardType + '-' + rowIndex + colIndex }\r\n                            className={ `gameboard-cell ${this.props.boardType}-cell` }\r\n                            data={rowIndex + \"\" + colIndex}\r\n                            onClick={ () => { this.props.handleCellClick((rowIndex + \"\" + colIndex)) } }>\r\n                                { row + \"-\" + col }\r\n                            </div>)}\r\n                        </div>) }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Board;","import React from 'react';\r\n\r\nclass SetupPrompt extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <div\r\n            id=\"setup-prompt-window\"\r\n            className='setup-prompt-window'>\r\n                <h1>place your {this.props.setupState}</h1>\r\n                <button\r\n                onClick={() => {this.props.handleSubmitClick()}}>submit your board</button>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default SetupPrompt;","import React from 'react';\nimport Board from './Board';\nimport Ship from './Ship';\nimport SetupPrompt from './SetupPrompt';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      setupState: null\n    }\n    this.tempSetupArr = [];\n    this.playerCoords = [];\n    this.computerCoords = [];\n\n    this.patrol = new Ship('patrol', 2, []);\n    this.frigate = new Ship('frigate', 3, []);\n    this.submarine = new Ship('submarine', 3, []);\n    this.cruiser = new Ship('cruiser', 4, []);\n    this.carrier = new Ship('carrier', 5, []);\n\n    this.NPCpatrol = new Ship('patrol', 2, []);\n    this.NPCfrigate = new Ship('frigate', 3, []);\n    this.NPCsubmarine = new Ship('submarine', 3, []);\n    this.NPCcruiser = new Ship('cruiser', 4, []);\n    this.NPCcarrier = new Ship('carrier', 5, []);\n\n    this.handleStartMenuClick = this.handleStartMenuClick.bind(this);\n    this.handleSetupClick = this.handleSetupClick.bind(this);\n    this.handleSetupSubmission = this.handleSetupSubmission.bind(this);\n\n  }\n\n  handleStartMenuClick() {\n    // remove start menu elements\n    const menu = document.querySelector('.start-menu-container');\n    menu.classList.toggle('hide');\n\n    // render setup elements\n    const setup = document.querySelector('#setup-container');\n    setup.classList.toggle('show');\n    const setupPromptWindow = document.querySelector('.setup-prompt-window');\n    setupPromptWindow.classList.toggle('show');\n\n    this.setState({ setupState: 'patrol' });\n  }\n\n  handleSetupClick(index) {\n    const cell = document.querySelector(`#setup-${index}`);\n    \n    if(this.canPlace(index)) {      \n      cell.classList.add('player-occupied');\n      this.playerCoords.push(index);\n\n      const switchCase = this.state.setupState;\n      switch(switchCase) {\n        case 'patrol':\n          cell.classList.add('player-patrol');\n          this.tempSetupArr.push(index);\n          this.patrol.position.push(index);\n\n          if(this.patrol.position.length === this.patrol.size) {\n            this.tempSetupArr = [];\n            this.setState({ setupState: 'frigate' });\n          }\n          break;\n        case 'frigate':\n          cell.classList.add('player-frigate');\n          this.tempSetupArr.push(index);\n          this.frigate.position.push(index);\n\n          if(this.frigate.position.length === this.frigate.size) {\n            this.tempSetupArr = [];\n            this.setState({ setupState: 'submarine' });\n          }\n          break;\n        case 'submarine':\n          cell.classList.add('player-submarine');\n          this.tempSetupArr.push(index);\n          this.submarine.position.push(index);\n\n          if(this.submarine.position.length === this.submarine.size) {\n            this.tempSetupArr = [];\n            this.setState({ setupState: 'cruiser' });\n          }\n          break;\n        case 'cruiser':\n          cell.classList.add('player-cruiser');\n          this.tempSetupArr.push(index);\n          this.cruiser.position.push(index);\n\n          if(this.cruiser.position.length === this.cruiser.size) {\n            this.tempSetupArr = [];\n            this.setState({ setupState: 'carrier' });\n          }\n          break;\n        case 'carrier':\n          cell.classList.add('player-carrier');\n          this.tempSetupArr.push(index);\n          this.carrier.position.push(index);\n\n          if(this.carrier.position.length === this.carrier.size) {\n            this.tempSetupArr = [];\n            alert('setup complete');\n          }\n          break;\n        default: \n          alert('something went wrong');\n      }\n\n    } else {\n      alert('reassess placement please');\n    }\n\n  }\n\n  handleSetupSubmission() {\n    // remove all setup elements\n    const setupBoard = document.querySelector('#setup-container');\n    setupBoard.classList.toggle('show');\n    const setupWindow = document.querySelector('#setup-prompt-window');\n    setupWindow.classList.toggle('show');\n\n    // render the player board\n    this.renderPlayerBoard();\n    // randomize the computer board\n    // computer board is rendered within the randomize function\n    this.randomizeComputerBoard();\n  }\n  renderPlayerBoard() {\n    // coloring position of player ships\n    this.patrol.position.forEach(position => {\n      const cell = document.querySelector(`#player-${position}`);\n      cell.classList.add('player-patrol');\n    });\n    this.frigate.position.forEach(position => {\n      const cell = document.querySelector(`#player-${position}`);\n      cell.classList.add('player-frigate');\n    });\n    this.submarine.position.forEach(position => {\n      const cell = document.querySelector(`#player-${position}`);\n      cell.classList.add('player-submarine');\n    });\n    this.cruiser.position.forEach(position => {\n      const cell = document.querySelector(`#player-${position}`);\n      cell.classList.add('player-cruiser');\n    });\n    this.carrier.position.forEach(position => {\n      const cell = document.querySelector(`#player-${position}`);\n      cell.classList.add('player-carrier');\n    });\n\n    // disable click on player board\n    const cells = document.querySelectorAll('.player-cell');\n    cells.forEach(cell => {\n      cell.style = 'pointer-events: none;';\n    })\n    // render the player board\n    const board = document.querySelector('#player-container');\n    board.classList.toggle('show');\n  }\n  randomizeComputerBoard() {\n    // get a random coordinate 0-99\n    function getRandomIndex() {\n      var rand = Math.floor(Math.random() * 99);\n      // formatted to 00 format\n      return (rand).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping: false});\n    }\n    // automating cell placement per computer ship component\n    while(this.NPCpatrol.position.length < this.NPCpatrol.size) {\n      var index = getRandomIndex();\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\n        this.NPCpatrol.position.push(index);\n        this.tempSetupArr.push(index);\n        this.computerCoords.push(index);\n      } \n    }\n    this.tempSetupArr = [];\n    while(this.NPCfrigate.position.length < this.NPCfrigate.size) {\n      var index = getRandomIndex();\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\n        this.NPCfrigate.position.push(index);\n        this.tempSetupArr.push(index);\n        this.computerCoords.push(index);\n      } \n    }\n    this.tempSetupArr = [];\n    while(this.NPCsubmarine.position.length < this.NPCsubmarine.size) {\n      var index = getRandomIndex();\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\n        this.NPCsubmarine.position.push(index);\n        this.tempSetupArr.push(index);\n        this.computerCoords.push(index);\n      } \n    }\n    this.tempSetupArr = [];\n    while(this.NPCcruiser.position.length < this.NPCcruiser.size) {\n      var index = getRandomIndex();\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\n        this.NPCcruiser.position.push(index);\n        this.tempSetupArr.push(index);\n        this.computerCoords.push(index);\n      } \n    }\n    this.tempSetupArr = [];\n    while(this.NPCcarrier.position.length < this.NPCcarrier.size) {\n      var index = getRandomIndex();\n      if(this.canPlace(index) && !this.computerCoords.includes(index) ) {\n        this.NPCcarrier.position.push(index);\n        this.tempSetupArr.push(index);\n        this.computerCoords.push(index);\n      } \n    }\n    this.tempSetupArr = [];\n\n    // unequal position length and size indicates improper placement\n    // call the function again while condition remains unmet\n    if(this.NPCpatrol.position.length !== this.NPCpatrol.size &&\n      this.NPCfrigate.position.length !== this.NPCfrigate.size &&\n      this.NPCsubmarine.position.length !== this.NPCsubmarine.size &&\n      this.NPCcruiser.position.length !== this.NPCcruiser.size &&\n      this.NPCcarrier.position.length !== this.NPCcarrier.size ) {\n        this.randomizeComputerBoard();\n    }\n\n    this.renderComputerBoard();\n\n  }\n  renderComputerBoard() {\n    // setting classes for each cell per computer ship component\n    this.NPCpatrol.position.forEach( coord => {\n      const cell = document.querySelector(`#computer-${coord}`);\n      cell.classList.add('computer-occupied');\n      cell.classList.add('computer-patrol');\n    });\n    this.NPCfrigate.position.forEach( coord => {\n      const cell = document.querySelector(`#computer-${coord}`);\n      cell.classList.add('computer-occupied');\n      cell.classList.add('computer-frigate');\n    });\n    this.NPCsubmarine.position.forEach( coord => {\n      const cell = document.querySelector(`#computer-${coord}`);\n      cell.classList.add('computer-occupied');\n      cell.classList.add('computer-submarine');\n    });\n    this.NPCcruiser.position.forEach( coord => {\n      const cell = document.querySelector(`#computer-${coord}`);\n      cell.classList.add('computer-occupied');\n      cell.classList.add('computer-cruiser');\n    });\n    this.NPCcarrier.position.forEach( coord => {\n      const cell = document.querySelector(`#computer-${coord}`);\n      cell.classList.add('computer-occupied');\n      cell.classList.add('computer-carrier');\n    });\n\n    const board = document.querySelector('#computer-container');\n    board.classList.toggle('show');\n  }\n\n  canPlace(index) {\n    // used for numerical comparisons\n    const intIndex = parseInt(index);\n\n    // first cell\n    if(this.tempSetupArr.length === 0) {\n      return true;\n    // second cell\n    } else if (this.tempSetupArr.length === 1) {\n      // check wraparounds\n      if((this.tempSetupArr[0].charAt(1) == 9 && index.charAt(1) == 0) ||\n         (this.tempSetupArr[0].charAt(1) == 0 && index.charAt(1) == 9 )) {\n        return false;\n      }\n\n      // immediate above and below\n      if(this.tempSetupArr[0] == intIndex + 10 ||\n         this.tempSetupArr[0] == intIndex - 10 ) {\n           return true;\n         }\n\n      // immediate left and right\n      if(this.tempSetupArr[0] == intIndex + 1 ||\n         this.tempSetupArr[0] == intIndex - 1 ) {\n           return true;\n         }\n    // third+ cell\n    } else {\n      // sort tempArr to for organized traversal\n      this.tempSetupArr.sort(function(a,b){return a-b;});\n\n      // horizontal ship\n      if(Math.abs(this.tempSetupArr[0] - this.tempSetupArr[1]) === 1 ) {\n        if( \n          // check left and right of the beginning and end of array\n          (this.tempSetupArr[0] == intIndex + 1 ||\n          this.tempSetupArr[0] == intIndex - 1 ||\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex + 1 ||\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex - 1) &&\n          // check wraparound placement\n          (this.tempSetupArr[0].charAt(0) == index.charAt(0)) \n          ){\n            return true;\n          }\n      // vertical ship\n      } else {\n        // check above and below of the beginnign and end of array\n        if(this.tempSetupArr[0] == intIndex + 10 ||\n          this.tempSetupArr[0] == intIndex - 10 ||\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex + 10 ||\n          this.tempSetupArr[this.tempSetupArr.length - 1] == intIndex - 10 ) {\n            return true;\n          }\n      }\n    }\n\n  }\n\n\n  handlePlayerClick() {\n    alert('player clicked');\n  }\n\n\n  render() {\n    return(\n      <>\n      <div className='start-menu-container'>\n        <h1>Welcome to Frag-A-Frigate</h1>\n        <button onClick={ this.handleStartMenuClick }>click to begin</button>\n      </div>\n      <Board \n      boardType='setup'\n      handleCellClick={ this.handleSetupClick }/>\n      <SetupPrompt \n      setupState={this.state.setupState}\n      handleSubmitClick={this.handleSetupSubmission}\n      />\n\n      <Board \n      boardType='player'/>\n\n      <Board \n      boardType='computer'\n      handleCellClick= { this.handlePlayerClick }/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}